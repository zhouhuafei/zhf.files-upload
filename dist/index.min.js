"use strict";var extend=require("zhf.extend"),getDomArray=require("zhf.get-dom-array");function FilesUpload(e){this.opts=extend({input:null,limitNum:5,maxSize:2097152,overLimitCallback:function(){console.log("no find overLimitCallback")},changeCallback:function(){console.log("no find changeCallback")},base64CallbackItem:function(){console.log("no find base64CallbackItem")},base64CallbackAll:function(){console.log("no find base64CallbackAll")}},e),this.opts.input?this.init():console.log("no find input")}FilesUpload.prototype.init=function(){this.render(),this.power()},FilesUpload.prototype.render=function(){},FilesUpload.prototype.power=function(){this.events()},FilesUpload.prototype.events=function(){this.eventsInputChange()},FilesUpload.prototype.eventsInputChange=function(){var e=this,t=this.opts,i=t.limitNum,n=t.maxSize;getDomArray(t.input)[0].addEventListener("change",function(){for(var a=0,l=[],o=this.files,s=o.length,r=[],c=0;c<s;c++){a++;var p=o[c],u=p.size;a>i||u>n?r.push({limitNum:i,filesNum:a,size:u,maxSize:n,file:p,index:c}):l.push(p)}t.changeCallback(l),t.overLimitCallback(r),e.fileReadAsDataURL(l)})},FilesUpload.prototype.fileReadAsDataURL=function(e){var t=this.opts,i=0,n=[];e.forEach(function(a,l){var o=new FileReader;o.readAsDataURL(a),o.addEventListener("load",function(){i++,t.base64CallbackItem({base64:this.result,index:l}),n.push({base64:this.result,index:l}),i===e.length&&t.base64CallbackAll(n)})})},module.exports=FilesUpload;